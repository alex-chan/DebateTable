// Generated by CoffeeScript 1.10.0
(function() {
  'use strict';
  var Topic, handleEntityNotFound, handleError, respondWithResult, sqldb;

  sqldb = require('../../sqldb');

  Topic = sqldb.Topic;

  handleEntityNotFound = function(res) {
    return function(entity) {
      if (!entity) {
        res.status(404).end();
        return null;
      }
      return entity;
    };
  };

  respondWithResult = function(res, statusCode) {
    statusCode = statusCode || 200;
    return function(entity) {
      if (entity) {
        return res.status(statusCode).json(entity);
      }
    };
  };

  handleError = function(res, statusCode) {
    statusCode = statusCode || 500;
    return function(err) {
      return res.status(statusCode).send(err);
    };
  };

  exports.index = function(req, res) {
    return Topic.findAll().then(respondWithResult(res))["catch"](handleError(res));
  };

  exports.show = function(req, res) {
    return Topic.find({
      where: {
        _id: req.params.id
      }
    }).then(handleEntityNotFound(res)).then(respondWithResult(res))["catch"](handleError(res));
  };

}).call(this);

//# sourceMappingURL=topic.controller.js.map
